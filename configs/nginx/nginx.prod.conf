events {
    worker_connections 4096;     # เพิ่มจำนวน connections ต่อ worker
    multi_accept on;             # รับหลาย connections ต่อ event notification
    use epoll;                   # ใช้ epoll method สำหรับ Linux 
}

http {
    # การตั้งค่าพื้นฐาน
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # ตั้งค่า logging
    access_log /var/log/nginx/access.log combined buffer=64k flush=10s;
    error_log /var/log/nginx/error.log warn;
    
    # Buffer sizes
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 4 4k;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # กำหนด upstream servers
    upstream backend {
        # พฤติกรรมการกระจาย load ให้แต่ละเซิร์ฟเวอร์
        least_conn;              # เลือกเซิร์ฟเวอร์ที่มีการเชื่อมต่อน้อยที่สุด

        # DNS จะถูกกำหนดโดย docker-compose.prod.yml เพื่อชี้ไปที่ replicas ของ app-prod
        server app-prod:8080 max_fails=3 fail_timeout=10s;
        
        # คงการเชื่อมต่อ TCP เอาไว้
        keepalive 100;
    }

    server {
        listen 80 backlog=4096; # เพิ่ม backlog เพื่อรองรับการเชื่อมต่อที่รอคิวได้มากขึ้น

        # เพิ่ม gzip compression
        gzip on;
        gzip_comp_level 5;
        gzip_min_length 256;
        gzip_proxied any;
        gzip_types
            application/javascript
            application/json
            text/css
            text/plain;

        # SSE endpoint 
        location /api/sensors/stream {
            access_log off;     # ปิดการบันทึก log เพื่อปรับปรุงประสิทธิภาพในกรณีที่มีจำนวนมาก
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # การตั้งค่าสำหรับ SSE
            proxy_buffering off;                # ปิดการ buffer เพื่อให้ข้อมูลถูกส่งทันที
            proxy_cache off;                    # ปิดการใช้ cache
            proxy_http_version 1.1;             # ใช้ HTTP 1.1
            proxy_set_header Connection "";     # ปิด keep-alive จาก client เพื่อรองรับ long polling

            # เพิ่ม timeouts สำหรับ long connections
            proxy_read_timeout 3600s;           # อนุญาตให้การเชื่อมต่อคงอยู่ได้นาน
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
        }

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # การตั้งค่าสำหรับ HTTP ทั่วไป
            proxy_buffering on;
            proxy_http_version 1.1;
            
            # Timeouts ปกติ
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }
        
        # สำหรับ static files
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg)$ {
            proxy_pass http://backend;
            proxy_buffering on;  # เปิด buffering สำหรับไฟล์ static
            proxy_cache_valid 200 302 10m;
            expires 1h;
            add_header Cache-Control "public";
        }
        
        # เพิ่ม health check endpoint
        location /health {
            proxy_pass http://backend/health;
            proxy_buffering on;
        }
    }
} 